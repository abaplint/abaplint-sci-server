name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-js:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    - name: npm install, npm test
      run: |
        npm install
        npm test
      env:
        CI: true

  test-docker:
    runs-on: ubuntu-latest
    steps:
    # This job uses scripts, not docker actions. To keep reusability and control consistency
    -
      uses: actions/checkout@v3
    -
      name: build and start container
      run: |
        bin/docker-build.sh
        bin/docker-run.sh -d
        sleep 5s
    -
      name: runcheck healthz
      run: |
        bin/docker-test.sh
    -
      name: stop containers
      if: always()
      run: docker stop $(docker ps -a -q)

  publish-docker:
    runs-on: ubuntu-latest
    needs: test-docker
    if: github.ref == 'refs/heads/main' && github.repository == 'abaplint/abaplint-sci-server'
    steps:
    -
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        # This is have full depth of commits which are used in Version below
        # Maybe worth changing the approach in future
    -
      name: Determine version
      id: determine_version
      run: |
        GIT_VERSION=`git rev-list HEAD --count`
        echo Git Version: $GIT_VERSION
        ABAPLINT_VERSION=`jq '.dependencies."@abaplint/core".version' -r package-lock.json`
        echo abaplint Version: $ABAPLINT_VERSION
        NEW_VERSION=`echo ${GIT_VERSION}-${ABAPLINT_VERSION}`
        echo New Version: $NEW_VERSION
        echo "::set-output name=NEW_VERSION::$NEW_VERSION"
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: larshp
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      name: Build and publish docker container
      id: docker_build
      env:
        DOCKER_REPO: abaplint/abaplint-backend
      uses: docker/build-push-action@v3
      with:
        push: true
        context: .
        file: ./docker/Dockerfile
        tags: |
          ${{ env.DOCKER_REPO }}:latest
          ${{ env.DOCKER_REPO }}:${{ steps.determine_version.outputs.NEW_VERSION }}
    -
      name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
